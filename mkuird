#!/bin/bash
CFG=legacy
CONFIG=./mkuird.cfg
EXCLUDE=qqqqqqqqqqq
BUILD=uird

for arg in $@
do
  case "${arg}" in
    "-c" | "--config" ) config=yes;;
    "-e" | "--exclude" ) exclude=yes;;
    "-n" | "--name" ) name=yes;;
    "--kmod" ) BUILD=kmod;;
    "--addon" ) BUILD=addon;;
    "-"*[A-Za-z]*) echo "$(basename "$0"): invalid option -- '$(echo ${arg} | tr -d '-')'" >&2; exit 1;;
    *) if [ "${config}" == "yes" ]; then CONFIG="${arg}"
		elif [ "${exclude}" == "yes" ]; then EXCLUDE="${arg}"
		elif [ "${name}" == "yes" ]; then NAME="${arg}"
		else CFG="${arg}" ; fi
        config="no"; exclude="no"; name="no";;
  esac
done

. $CONFIG
EXCLUDE=$(echo "$EXCLUDE" |sed "s/,/|/g")

if ! [ -f ./configs/uird_configs/$CFG ]; then
	echo "./configs/uird_configs/$CFG is not exist"
	exit 1
fi

echo $date >./not_found.log
cd dracut/modules.d
ln -s ../../modules.d/* ../modules.d/ 2>/dev/null
cd ../..

KM=""
for item in Base_KM  NetWork_KM Dev_KM Crypto_KM CompAlg_KM ; do
if echo "$item" | egrep -q "$EXCLUDE" ; then 
	echo "excluded: $item"
	continue
fi
for   mod in ${!item} ; do
	if echo "$mod" | egrep -q  "$EXCLUDE" ; then 
		echo "excluded: $mod"
		continue
	fi
	if echo $mod | egrep -q "^=" ; then 
		KM="$KM $mod" 
	elif /sbin/modinfo $mod >/dev/null ; then
		KM="$KM $mod"
	else
		echo "kernel module: $mod not found"  >>./not_found.log
	fi
done
done

FS=''
if echo FileSystems_KM | egrep -qv "$EXCLUDE" ; then
for   mod in $FileSystems_KM ; do
	if echo "$mod" | egrep -q  "$EXCLUDE" ; then 
		echo "excluded: $mod"
		continue
	fi
	if echo $mod | egrep -q "^=" ;then 
		FS="$FS $mod" 
	elif /sbin/modinfo $mod >/dev/null; then
		FS="$FS $mod"
	else
		echo "FS $mod kernel module: $mod not found"  >>./not_found.log
	fi
done
else
		echo "excluded: File systems kernel modules"
fi

DM=''
for   mod in $DracutM $UirdM; do
	echo "$mod" | egrep -q  "$EXCLUDE" && continue
	DM="$DM $mod"
done

UIRD_BINS=""
for item in  FS_bins NetWork_bins Base_bins ; do
if echo "$item" | egrep -q "$EXCLUDE" ; then
	echo "excluded: $item"
	continue
fi
for  binary in ${!item} ; do
	if echo "$binary" | egrep -q  "$EXCLUDE" ; then
		echo "excluded: $binary"
		continue
	fi
	if which $binary >/dev/null; then
		UIRD_BINS="$UIRD_BINS $binary"
	else
		echo "File: $binary not found in current PATH"  >>./not_found.log
	fi
done
done

export UIRD_BINS

if [ "$BUILD" == "kmod" ] ; then
	echo "MAKE UIRD (Kernel modules only)"
	uirdfile=uird.kmod.cpio.xz
	./dracut/dracut.sh -l -N -f -m "$DracutM" \
	-d "$KM" \
	--filesystems "$FS" \
	--kernel-only \
	-c dracut.conf -v -M $uirdfile $(uname -r) >dracut_kmod.log 2>&1
elif [ "$BUILD" == "addon" ] ; then
	echo "MAKE UIRD addon "
	uirdfile=uird.addon.cpio.xz
	./dracut/dracut.sh -l -N -f -m "$ExtraM" \
	--no-kernel \
	-c dracut.conf -v -M $uirdfile $(uname -r) >dracut_addon.log 2>&1
else
	echo "MAKE UIRD $CFG"
	uirdfile="uird.$CFG.cpio.xz"
	./dracut/dracut.sh -l -N --strip -f -m "$DM" \
	-d "$KM" \
	--filesystems "$FS" \
	-i initrd /  \
	-i configs /  \
	--kernel-cmdline "uird.basecfg=/uird_configs/$CFG" \
	-c dracut.conf -v -M $uirdfile $(uname -r)  >dracut_magos.log 2>&1
fi

[ $NAME ] && mv $uirdfile "$NAME"

