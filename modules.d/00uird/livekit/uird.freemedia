#!/bin/sh
freemedia() {
	echolog "starting freemedia...."
	LOSETUP=""
	devs=$(egrep "${DATAMNT}/from|$MOUNTDIR" /proc/mounts | cut -d " " -f 1 | sort | uniq -d)
	BINDIR="${MEMORY}/run/bin"
	mkdir -p $BINDIR
	RULESDIR="${MEMORY}/run/udev/rules.d"
	mkdir -p $RULESDIR
	for dev in $devs; do
		UUID=$($BIN_BLKID -s UUID | grep $dev | cut -d " " -f 2 | cut -d "\"" -f2)
		SERIAL_ID=$(udevadm info -a -n $dev | grep "ATTRS{serial}" | head -n1)
		MNTOPTS=$(grep $dev /proc/mounts | head -n1 | cut -d " " -f 4)
		RBIND=$(grep $dev /proc/self/mountinfo | awk '{print $4 "," $5}' | grep -v ^/,)
		for mountstr in $RBIND; do
			unmnt=$(echo $mountstr | cut -d "," -f2)
			$BIN_LOSETUP -d $($BIN_LOSETUP | grep $unmnt | cut -d " " -f 1) 2>/dev/null && LOSETUP=$unmnt
			umount $unmnt 2>/dev/null || echolog "can't unmount $unmnt"
		done
		MPOINT=$(grep $dev /proc/self/mountinfo | grep ".* / .*$dev" | cut -d " " -f 5)
		umount $dev 2>/dev/null
		if [ $? -eq 0 ]; then
			eject $dev 2>/dev/null #may be cdrom
			log "generate remount scripts to $dev"
			echo "#!/bin/bash" >$BINDIR/$UUID
			echo "sleep 3" >>$BINDIR/$UUID
			echo "mkdir -p $MPOINT" >>$BINDIR/$UUID
			echo "mount  -o $MNTOPTS  --uuid $UUID  $MPOINT" >>$BINDIR/$UUID
			for mountstr in $RBIND; do
				mpoint=$(echo $mountstr | cut -d "," -f2)
				echo "mkdir -p $mpoint" >>$BINDIR/$UUID
				echo "mount --rbind $MPOINT$(echo $mountstr | cut -d "," -f1) " $mpoint >>$BINDIR/$UUID
				[ "$LOSETUP" == "$mpoint" ] && echo 'losetup $(losetup -f)  '"$mpoint/.lock" >>$BINDIR/$UUID
			done
			echo '' >>$BINDIR/$UUID
			chmod +x $BINDIR/$UUID
			echo "KERNEL==\"s??\",  $SERIAL_ID,  ACTION==\"add\", RUN+=\"/run/bin/$UUID \"" >${RULESDIR}/00-${UUID}.rules
		fi
	done
	for device in $(echo $devs | while read a; do echo $a | cut -c 1-8; done | sort | uniq); do
		cat /proc/mounts | grep -q $device && notfree="$notfree $device"
	done

	if [ "$notfree" ]; then
		echo -e "Media:" $red"$notfree"$default "is not free!!!"
		echo -ne $yellow"(S)hutdown, (R)eboot, (C)ontinue, Shell (default)"$default
		read ASK
		case "$ASK" in
		"S" | "s")
			#shutdown
			poweroff -f
			;;
		"R" | "r")
			#reboot
			reboot -f
			;;
		"C" | "c")
			#continue
			;;
		*)
			#else - SHELL
			shell_cmd "shell"
			;;
		esac
	fi
	echo -ne $blue"  * "$default
	echo "adding  udev rules for remount sources"
}
