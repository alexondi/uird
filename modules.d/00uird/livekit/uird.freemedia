#!/bin/sh
uird_freemedia() {
	local  UUID MPOINT MNTOPTS RBIND
	FREEMEDIA_BEGIN=$($GETTEXT "Starting freemedia....")
	MEDIA=$($GETTEXT "Media")
	NOTFREE=$($GETTEXT "is not free")
	RULES=$($GETTEXT "add the udev rules to remount sources")
	CANT_UNMOUNT=$($GETTEXT "Can't unmount")
	move_run
	echo_green_star && echolog "$FREEMEDIA_BEGIN"
	LOSETUP=""
	devs=$(egrep "${DATAMNT}/from|$MOUNTDIR" /proc/mounts | cut -d " " -f 1 | sort | uniq -d)
	BINDIR="${UNION}/run/bin"
	mkdir -p $BINDIR
	RULESDIR="${UNION}/run/udev/rules.d"
	mkdir -p $RULESDIR
	for dev in $devs; do
		unset LOSETUP ; unset LOOP ; unset  LOOP_FILE
		UUID=$($BIN_BLKID -s UUID | grep $dev | cut -d " " -f 2 | cut -d "\"" -f2)
		SERIAL_ID=$(udevadm info -a -n $dev | grep "ATTRS{device}" | head -n1)
		MNTOPTS=$(grep $dev /proc/mounts | head -n1 | cut -d " " -f 4)
		RBIND=$(grep $dev /proc/self/mountinfo | awk '{print $4 "," $5}' | grep -v ^/,)
		for mountstr in $RBIND; do
			unmnt=$(echo $mountstr | cut -d "," -f2)
			LOOP=$($BIN_LOSETUP | grep $unmnt | cut -d " " -f 1)
			LOOP_FILE=$($BIN_LOSETUP | grep $unmnt | awk '{print $6}')
			[ $LOOP ] && $BIN_LOSETUP -d  $LOOP 2>/dev/null && LOSETUP=$LOOP_FILE
			umount $unmnt 2>/dev/null || echolog "$CANT_UNMOUNT $unmnt"
		done
		MPOINT=$(grep $dev /proc/self/mountinfo | grep ".* / .*$dev" | cut -d " " -f 5)
		LOOP=$($BIN_LOSETUP | grep $MPOINT | cut -d " " -f 1) 2>/dev/null
		LOOP_FILE=$($BIN_LOSETUP | grep $MPOINT | awk '{print $6}')
		[ $LOOP ] && $BIN_LOSETUP -d $LOOP && LOSETUP=$LOOP_FILE 
		umount $dev 2>/dev/null
		if [ $? -eq 0 ]; then
			eject $dev 2>/dev/null #may be cdrom
			log "generate remount scripts to $dev"
			echo "#!/bin/bash" >$BINDIR/$UUID
			echo "systemctl status systemd-logind.service || exit " >>$BINDIR/$UUID
			echo "sleep 3" >>$BINDIR/$UUID
			echo "mkdir -p $MPOINT" >>$BINDIR/$UUID
			echo "mount  -o $MNTOPTS  --uuid $UUID  $MPOINT" >>$BINDIR/$UUID
			for mountstr in $RBIND; do
				mpoint=$(echo $mountstr | cut -d "," -f2)
				echo "mkdir -p $mpoint" >>$BINDIR/$UUID
				echo "mount --rbind $MPOINT$(echo $mountstr | cut -d "," -f1) " $mpoint >>$BINDIR/$UUID
			done
			[ $LOSETUP ] && echo 'losetup $(losetup -f)'"  $LOSETUP" >>$BINDIR/$UUID
			echo '' >>$BINDIR/$UUID
			chmod +x $BINDIR/$UUID
			echo "KERNEL==\"sd?\",  $SERIAL_ID,  ACTION==\"add\", RUN+=\"/run/bin/$UUID \"" >${RULESDIR}/00-${UUID}.rules
		fi
	done
	for device in $(echo $devs | while read a; do echo $a | cut -c 1-8; done | sort | uniq); do
		cat /proc/mounts | grep -q $device && notfree="$notfree $device"
	done

	if [ "$notfree" ]; then
		echo -e "${MEDIA}:" $red"$notfree"$default "${NOTFREE}:"
		echo -ne $yellow"(S)hutdown, (R)eboot, (C)ontinue, Shell (default)"$default" "
		read ASK
		case "$ASK" in
		"S" | "s")
			#shutdown
			poweroff -f
			;;
		"R" | "r")
			#reboot
			reboot -f
			;;
		"C" | "c")
			#continue
			;;
		*)
			#else - SHELL
			shell_cmd "shell"
			;;
		esac
	fi
	echo -ne $blue"  * "$default
	echo "$RULES"
}
