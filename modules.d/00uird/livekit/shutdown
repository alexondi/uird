#!/bin/ash
. /oldroot/etc/initvars 
IMAGES=/oldroot${SYSMNT}/bundles 
for dir in run proc sys dev ; do
    mkdir /run/$dir
    mount -o move /oldroot/$dir /run/$dir
done
egrep "$IMAGES" /proc/mounts | awk '{print $2}' | while read a ; do
   mount -t aufs -o remount,del:"$a" aufs /oldroot 
   umount $a  && echo "Umount: $a -- OK"
done
mkdir /run${SYSMNT}
mount -o move /oldroot${SYSMNT} /run${SYSMNT}

#savetomodole
#############################################################################

# save2module mode parser
MODULEFORMAT=xzm
CHSRC=/run${SYSMNT}/changes
IMSRC=/run${SYSMNT}/bundles

[ -f /.savetomodule ] && grep -q . /.savetomodule && SAVETOMODULENAME="$(cat /.savetomodule)"
[ -f /.savetomodule ] && SAVETOMODULE=${SAVETOMODULE-yes}
grep -q save2module /proc/cmdline && SAVETOMODULE=${SAVETOMODULE-yes}
# if machine was freezed
egrep -q '/dynamic/|/static/' /.savetomodule 2>/dev/null  && [ -f "$(sed s=dynamic=static= /.savetomodule)" ] && SAVETOMODULE=no
# if machine was unfreezed
grep -q /static/ /.savetomodule 2>/dev/null && [ ! -f "$(cat /.savetomodule)" ] && SAVETOMODULENAME=$(sed s=static=dynamic= /.savetomodule)
SAVETOMODULEDIR="$(dirname $SAVETOMODULENAME)"
FILELIST=/.savelist
if [ -w $SAVETOMODULEDIR -a "$SAVETOMODULE" = "yes" ] ;then
   echo "Please wait. Saving changes to module $SAVETOMODULENAME"
   # if old module exists we have to concatenate it
   if [ -d $IMSRC/${SAVETOMODULENAME##*/} ]; then
      echo "Old module exists, we have to concatenate it"
      SRC=/mnt/live/tmp/save2module
      mkdir -p $SRC $SRC-rw
      mount -t aufs -o shwh,br:$SRC-rw=rw:$CHSRC=rr:$IMSRC/${SAVETOMODULENAME##*/}=rr aufs $SRC
   else 
      SRC=$CHSRC
   fi
   # preparing excluded files list
   echo -e "/tmp/includedfiles\n/tmp/excludedfiles" > /tmp/excludedfiles
   if [ -f "$FILELIST" ] ;then
      grep ^! "$FILELIST" | cut -c 2- >/tmp/savelist.black
      grep -v '^[!#]' "$FILELIST" | grep . >/tmp/savelist.white
      grep -q . /tmp/savelist.white || echo '.' > /tmp/savelist.white
      find $SRC/ -type l >/tmp/allfiles
      find $SRC/ -type f >>/tmp/allfiles
      sed -i 's|'$SRC'||' /tmp/allfiles
      grep -f /tmp/savelist.white /tmp/allfiles | grep -vf /tmp/savelist.black > /tmp/includedfiles
      grep -q . /tmp/savelist.black && grep -f /tmp/savelist.black /tmp/allfiles >> /tmp/excludedfiles
      grep -vf /tmp/savelist.white /tmp/allfiles >> /tmp/excludedfiles
      find $SRC/ -type d | sed 's|'$SRC'||' | while read a ;do
          grep -q "^$a" /tmp/includedfiles && continue
          echo "$a" | grep -vf /tmp/savelist.black | grep -qf /tmp/savelist.white && continue
          echo "$a" >> /tmp/excludedfiles
      done
      rm -f /tmp/savelist* /tmp/allfiles /tmp/includedfiles
   fi
   sed -i 's|^/||' /tmp/excludedfiles
   # backuping old module
   [ -f "$SAVETOMODULENAME" ] && mv -f "$SAVETOMODULENAME" "${SAVETOMODULENAME}.bak"
   # making module
   [ "$SAVETONOXZM" = "yes" ] && SAVETOMODULEOPTIONS="-noI -noD -noF"
   create_module $SRC "$SAVETOMODULENAME" -ef /tmp/excludedfiles $SAVETOMODULEOPTIONS
   echo
   [ "$SRC" = "$CHSRC" ] || umount "$SRC"
fi
exit 0

#############################################################################
umount /oldroot
umount $(mount | awk  '{print $3}' | sort -r)

echo "#####################################"
echo "##### ### ## ##     ##     ##########"
echo "##### ### ##### ### ## #### #########"
echo "##### ### ## ## ## ### #### #########"
echo "#####     ## ## ### ##     ##########"
echo "#####################################"
/bin/ash
poweroff -f
