#!/bin/sh
# toxzm mode
# $1 = xzmchanges mount directory
# $2 = changes directory
# $3 = bundles dir
# $4 = union dir
# $5 = toram dir
setup_toxzm_mode() {
	local OPTIONS FS BUNDLE DATA_FROM DATA_FROM_DIR n end 
	local MODE='' REBUILD='' ADDFILTER='' DROPFILTER=''  SQFSOPT='' MAXCOPYSIZE='' EXT=''
	debug_log "setup toxzm_mode" "$*"
	MNT_DIR=$1
	FPARS="/tmp/parameters/$UIRD_MODE/1"
	if [ -f "$FPARS" ] ; then
		for str in  $(cat $FPARS |sed -n '2,$p')  ; do
			local |grep -q "$(echo $str |cut  -f1 -d=)"   && 	eval $str 
		done 
	fi
	[ "$EXT" ] || EXT='xzm'
	DMODE='copy' ; 		[ "$MODE" ] && DMODE="$MODE" 
	DREBUILD='yes' ; 	[ "$REBUILD" ] && DREBUILD="$REBUILD"
	DADDFILTER='' ; 	[ "$ADDFILTER" ] &&  DADDFILTER="$ADDFILTER"
	DDROPFILTER='' ;	[ "$DROPFILTER" ] && DDROPFILTER="$DROPFILTER"
	DSQFSOPT='' ; 		[ "$SQFSOPT" ] && DSQFSOPT="$SQFSOPT"
	DMAXCOPYSIZE=''; 	[ "$MAXCOPYSIZE" ] && DMAXCOPYSIZE="$MAXCOPYSIZE"
	unset MODE REBUILD ADDFILTER DROPFILTER  SQFSOPT MAXCOPYSIZE
	CHANGESVAL=$(getpar $UIRD_CHANGES 1 1 )
	[ -z "$CHANGESVAL" ] && CHANGESVAL="/changes.cfg"
	CHANGESVAL="$(echo "$CHANGESVAL" |sed "s/.${EXT}$/.cfg/")"
	echo_green_star
	echolog "Seting up CHANGES to XZM mode" $brown"$CHANGESVAL"$default
	DATA_FROM=$(find_data $CHANGESVAL $MNT_DIR "$FPARS")
	add_section() {
		SECTION=$1
		XZMNAME=$2
		echo "# NEED" >> $CHANGESMNT
		echo "# A" >> $CHANGESMNT
		echo "# SIMPLE" >> $CHANGESMNT
		echo "# HELP" >> $CHANGESMNT
		echo "# HERE" >> $CHANGESMNT
		echo "XZM${SECTION}=$XZMNAME" >> $CHANGESMNT
		echo "MODE${SECTION}='${DMODE}'" >> $CHANGESMNT
		echo "REBUILD${SECTION}='$DREBUILD'" >> $CHANGESMNT
		echo "ADDFILTER${SECTION}='$DADDFILTER'" >> $CHANGESMNT
		echo "DROPFILTER${SECTION}='$DDROPFILTER'" >> $CHANGESMNT
		echo "SQFSOPT${SECTION}='$DSQFSOPT'" >> $CHANGESMNT
		echo "MAXCOPYSIZE${SECTION}='$DMAXCOPYSIZE'" >> $CHANGESMNT
	}
	
	get_MUID() {
		# calculate machine UID
		MUID=mac-$(cat /sys/class/net/e*/address 2>/dev/null | head -1 | tr -d :)
		[ "$MUID" = "mac-" ] && MUID=mac-$(cat /sys/class/net/*/address 2>/dev/null | head -1 | tr -d :)
		[ "$MUID" = "mac-" ] && MUID=vga-$(lspci -mm | grep -i vga | md5sum | cut -c 1-12)
		echo "$MUID"
	}
		
	if [ -d "$DATA_FROM" ] ; then
		MUID=$(get_MUID)
		CHANGESMNT=${DATA_FROM}/${MUID}.cfg
	elif [ -f "$DATA_FROM" ] ; then
		CHANGESMNT=$DATA_FROM
	else
		if dirname  $CHANGESVAL |egrep -q "^\.$|^\/$" ; then
			echolog "File or dir for toxzm mode not found"
			echolog "Toxzm  mode disabled!!!"
			sleep 5
			return
		fi
		DATA_FROM_DIR=$(find_data $(dirname $CHANGESVAL) $MNT_DIR "$FPARS")
		CHANGESMNT="$DATA_FROM_DIR/$(basename $CHANGESVAL)"
	fi
	if [ -f "$CHANGESMNT" ]; then
		echo_blue_star
		echolog "Parsing $CHANGESMNT"
		source  "$CHANGESMNT"
		end=$(( $(cat "$CHANGESMNT" |egrep '^[[:space:]]*XZM[[:digit:]]{,2}=' |wc -l) - 1 ))
		notenumerated=$(cat "$CHANGESMNT" |egrep '^[[:space:]]*XZM.*[a-zA-Z]+.*=' |sed -e 's/^[[:space:]]*XZM//' -e 's/=.*$//')
		for n in $(seq 0 $end) $notenumerated; do
			eval XZM=\$XZM$n
			[ -z "$XZM" ] && XZM=${MUID}.$EXT
			[ "$XZM" == ".$EXT" ] && XZM=$(get_MUID).$EXT
			MODNAME="$(dirname $CHANGESMNT)/$XZM"
			[ -f $MODNAME ] || continue
			eval MODE=\$MODE$n
			eval MAXCOPYSIZE=\$MAXCOPYSIZE$n
			[ -z $MAXCOPYSIZE ] && MAXCOPYSIZE=$(df -m $MEMORY |tail -n1 |awk '{print $4}')
			if [ "$MODE" = "copy" ] ; then
				if [ $(du -m $MODNAME |cut -f1) -lt "$MAXCOPYSIZE" ] ; then
					unsquashfs -f -d "$2" "$MODNAME" # >/dev/null 2>&1
					[ $? -eq 0 ] && echolog "  $blue-->" $purple"$MODNAME"$green" [Copy mode] "$default
				else
					MODE=mount
					if echo $XZM |grep -q '_20' ; then
						NEWNAME=$(echo $XZM |sed "s/_20.*$EXT/_$(date +%F-%H-%M).$EXT/")
					else 
						NEWNAME=$(echo $XZM |sed "s/.$EXT/_$(date +%F-%H-%M).$EXT/")
					fi
					echo '' >> "$CHANGESMNT"
					echo '### Section generated by UIRD ###' >> "$CHANGESMNT"
					if expr $n + 1 >/dev/null 2>&1 ; then
						NEWINDEX=$(($end + 1))
						end=$NEWINDEX
					else
						NEWINDEX=${n}_$RANDOM
					fi
					echo XZM${NEWINDEX}=$NEWNAME    >> "$CHANGESMNT"
					for str in MODE REBUILD ADDFILTER DROPFILTER SQFSOPT MAXCOPYSIZE ; do
					QUOTES="$(grep "^[[:space:]]*$str$n=.*$" "$CHANGESMNT" |sed -e "s:\":\':g" -e "s/[^\']//g" -e "s:\\\'::g" |wc -m)"
						if [ "$QUOTES" -eq 1 -o $(( "$QUOTES" % 2 )) -eq 1  ] ; then  
							grep "^[[:space:]]*$str$n=.*$" "$CHANGESMNT" |sed "s/$str$n=/${str}${NEWINDEX}=/"  >> "$CHANGESMNT"
						else
							eval echo "${str}${NEWINDEX}=\'\$$str$n\'" >> "$CHANGESMNT"
						fi
					done
					sed -i "s/MODE$n\=.*/MODE$n\=\'mount\'/" "$CHANGESMNT"
					sed -i "s/REBUILD$n\=.*/REBUILD$n\=\'no\'/" "$CHANGESMNT"
				fi
			fi
			if [ "$MODE" = "mount" -o "$MODE" = "mount+wh" ] ; then
				BUN="$(basename "$MODNAME")"
				if [ "$(getpar toram)$(getpar $UIRD_COPY2RAM)" ] ; then
					mkdir -p "$5"
					cp "$MODNAME" "$5"
					log "$BUN to RAM"
					echo -ne $yellow"  RAM"$default
					MODNAME="$5/$BUN"
				fi
				mkdir -p "$3/$BUN"
				FS="$(device_bestfs "$MODNAME")"
				OPTIONS="$(fs_options $FS mount)"
				mount -o $OPTIONS $FS "$MODNAME" "$3/$BUN"
				mount -o remount,add:1:"$3/$BUN"=ro+wh aufs "$4"
				[ $? -eq 0 ] && echolog "  $blue-->" $purple"$MODNAME"$green" [Mount mode] "$default
			elif [ "$MODE" = "none" ] ; then
				grep -q "/$(basename "$MODNAME")" /proc/mounts && MODE=mount 
			else 
				[ "$MODE" = "copy"  ] || echolog "wrong value - $MODE"
			fi
			echo MODE$n=$MODE >> /tmp/toxzm.state
		done
	else 	
		add_section 0 $(basename $CHANGESMNT |sed "s/.cfg/.$EXT/")
	fi		
echo CHANGESMNT=\"$CHANGESMNT\" >> /tmp/toxzm.state
}
